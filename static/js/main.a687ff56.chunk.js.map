{"version":3,"sources":["components/cinema-tab.tsx","components/loader.tsx","components/movie-card.tsx","components/youtube-embed.tsx","components/movie-details.tsx","components/app.tsx","reportWebVitals.ts","index.tsx"],"names":["CinemaTab","cinema","selected","selectCinema","className","onClick","name","Loader","useState","show","setShow","useEffect","setTimeout","MovieCard","movie","selectMovie","src","poster","YoutubeEmbed","embedId","url","videoId","setVideoId","match","exec","width","height","frameBorder","allow","allowFullScreen","title","MovieDetails","onClose","document","addEventListener","exit","removeEventListener","handleOpenInTab","newWindow","window","open","opener","useCallback","event","key","source","sessions","map","session","room","time","synopsis","director","actors","join","genres","duration","durationReadable","trailer","api","App","cinemas","setCinemas","undefined","selectedCinema","setSelectedCinema","selectedMovie","setSelectedMovie","movies","setMovies","loading","setLoading","fetch","then","resp","a","json","_cinemas","handleSelectCinema","catch","ex","console","error","id","cinemaMovies","handleSelectMovie","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a687ff56.chunk.js","sourcesContent":["import React from \"react\";\nimport { CinemaTabProps } from \"../models/props.interface\";\n\nconst CinemaTab = ({\n  cinema,\n  selected,\n  selectCinema,\n}: CinemaTabProps): React.ReactElement => {\n  return (\n    <button\n      className={selected ? \"button selected\" : \"button\"}\n      onClick={() => selectCinema(cinema)}\n    >\n      {cinema.name}\n    </button>\n  );\n};\n\nexport default CinemaTab;\n","import React, { useEffect, useState } from \"react\";\n\nconst Loader = (): React.ReactElement => {\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(true);\n    }, 500);\n  });\n  return show ? <div className=\"loader\">Loading...</div> : <div></div>;\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { MovieCardProps } from \"../models/props.interface\";\n\nconst MovieCard = ({\n  movie,\n  selectMovie,\n}: MovieCardProps): React.ReactElement => {\n  return (\n    <div className=\"movie\" onClick={() => selectMovie(movie)}>\n      <img className=\"poster\" src={movie.poster} />\n      <div className=\"name\">{movie.name}</div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React, { useEffect, useState } from \"react\";\nimport { YoutubeEmbedProps } from \"../models/props.interface\";\n\nconst YoutubeEmbed = ({\n  embedId,\n  url,\n}: YoutubeEmbedProps): React.ReactElement => {\n  const [videoId, setVideoId] = useState(embedId);\n  useEffect(() => {\n    if (url) {\n      const match = /v=([\\w|-]+)/.exec(url);\n      if (match && match[1]) {\n        setVideoId(match[1]);\n      }\n    }\n  });\n\n  return (\n    <div className=\"video-responsive\">\n      <iframe\n        width=\"853\"\n        height=\"480\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </div>\n  );\n};\n\nexport default YoutubeEmbed;\n","import React, { useCallback, useEffect } from \"react\";\nimport { MovieDetailsProps } from \"../models/props.interface\";\nimport YoutubeEmbed from \"./youtube-embed\";\n\nconst MovieDetails = ({\n  movie,\n  onClose,\n}: MovieDetailsProps): React.ReactElement => {\n  useEffect(() => {\n    document.addEventListener(\"keyup\", exit, false);\n\n    return () => {\n      document.removeEventListener(\"keyup\", exit, false);\n    };\n  }, []);\n\n  const handleOpenInTab = (url: string | undefined) => {\n    if (!url) return;\n    const newWindow = window.open(url, \"_blank\", \"noopener,noreferrer\");\n    if (newWindow) newWindow.opener = null;\n  };\n\n  const exit = useCallback((event: KeyboardEvent) => {\n    if (event.key === \"Escape\") {\n      onClose();\n    }\n  }, []);\n\n  return (\n    <div className=\"movie-details\">\n      <div className=\"header\">\n        <h3 className=\"name\">{movie.name}</h3>\n        <button\n          className=\"button\"\n          onClick={() => handleOpenInTab(movie.source)}\n        >\n          Página web\n        </button>\n        <button className=\"button danger\" onClick={onClose}>\n          Cerrar\n        </button>\n      </div>\n      <div className=\"content\">\n        <div className=\"sidebar\">\n          <img className=\"poster\" src={movie.poster} />\n          <div className=\"sessions\">\n            <h5 className=\"heading\">Compra de entradas</h5>\n            {movie.sessions.map((session) => {\n              return (\n                <button\n                  key={session.time}\n                  className=\"button session\"\n                  onClick={() => handleOpenInTab(session.url)}\n                >\n                  Sala {session.room} | {session.time}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"details\">\n          {movie.synopsis && (\n            <div className=\"detail\">\n              <h5 className=\"heading\">Sinopsis</h5>\n              <span>{movie.synopsis}</span>\n            </div>\n          )}\n          {movie.director && (\n            <div className=\"detail\">\n              <h5 className=\"heading\">Director</h5>\n              <span>{movie.director}</span>\n            </div>\n          )}\n          {movie.actors && (\n            <div className=\"detail\">\n              <h5 className=\"heading\">Intérpretes</h5>\n              <span>{movie.actors.join(\", \")}</span>\n            </div>\n          )}\n          {movie.genres && (\n            <div className=\"detail\">\n              <h5 className=\"heading\">Género</h5>\n              <span>{movie.genres.join(\", \")}</span>\n            </div>\n          )}\n          {movie.duration && (\n            <div className=\"detail\">\n              <h5 className=\"heading\">Duración</h5>\n              <span>\n                {movie.durationReadable} / {movie.duration} min.\n              </span>\n            </div>\n          )}\n          {movie.trailer && (\n            <div className=\"detail\">\n              <YoutubeEmbed url={movie.trailer} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from \"react\";\nimport { Cinema, CinemaMovies, Movie } from \"../models/cinema.interface\";\nimport CinemaTab from \"./cinema-tab\";\nimport Loader from \"./loader\";\nimport MovieCard from \"./movie-card\";\nimport MovieDetails from \"./movie-details\";\n\nconst api = \"https://api.drk.cat\";\n\nconst App = (): React.ReactElement => {\n  const [cinemas, setCinemas] = useState<Cinema[]>([]);\n  const [selectedCinema, setSelectedCinema] = useState<Cinema | undefined>(\n    undefined\n  );\n  const [selectedMovie, setSelectedMovie] = useState<Movie | undefined>(\n    undefined\n  );\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${api}/zine/cinema`)\n      .then(async (resp) => {\n        const _cinemas = await resp.json();\n        setCinemas(_cinemas);\n        handleSelectCinema(_cinemas[0]);\n        setLoading(false);\n      })\n      .catch((ex) => {\n        console.error(ex);\n      });\n  }, []);\n\n  const handleSelectCinema = (cinema: Cinema) => {\n    if (selectedCinema && selectedCinema.id === cinema.id) return;\n\n    setLoading(true);\n    setSelectedCinema(cinema);\n    fetch(`${api}/zine/cinema/${cinema.id}`)\n      .then(async (resp) => {\n        const cinemaMovies: CinemaMovies = await resp.json();\n        setMovies(cinemaMovies.movies);\n        setLoading(false);\n      })\n      .catch((ex) => {\n        console.error(ex);\n      });\n  };\n\n  const handleSelectMovie = (movie: Movie | undefined) => {\n    setSelectedMovie(movie);\n  };\n\n  const handleClose = () => {\n    setSelectedMovie(undefined);\n  };\n\n  return (\n    <div className=\"app\">\n      {selectedMovie && (\n        <MovieDetails movie={selectedMovie} onClose={handleClose} />\n      )}\n      <h1>Zine</h1>\n      <div className=\"cinemas\">\n        {cinemas?.map((cinema) => {\n          return (\n            <CinemaTab\n              key={cinema.id}\n              cinema={cinema}\n              selected={selectedCinema?.id === cinema.id}\n              selectCinema={handleSelectCinema}\n            />\n          );\n        })}\n      </div>\n\n      <h2>{selectedCinema?.name}</h2>\n      <div className=\"movies\">\n        {movies?.map((movie) => {\n          return (\n            <MovieCard\n              key={movie.id}\n              movie={movie}\n              selectMovie={handleSelectMovie}\n            />\n          );\n        })}\n      </div>\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport \"./index.sass\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}