{"version":3,"sources":["components/cinema-tab.tsx","components/loader.tsx","components/movie-card.tsx","components/app.tsx","reportWebVitals.ts","index.tsx"],"names":["CinemaTab","cinema","selected","selectCinema","className","onClick","name","Loader","useState","show","setShow","useEffect","setTimeout","MovieCard","movie","newWindow","window","open","source","opener","src","poster","api","App","cinemas","setCinemas","undefined","selectedCinema","setSelectedCinema","movies","setMovies","loading","setLoading","fetch","then","resp","a","json","_cinemas","handleSelectCinema","catch","ex","console","error","id","cinemaMovies","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAkBeA,EAfG,SAAC,GAIwB,IAHzCC,EAGwC,EAHxCA,OACAC,EAEwC,EAFxCA,SACAC,EACwC,EADxCA,aAEA,OACE,wBACEC,UAAWF,EAAW,eAAiB,MACvCG,QAAS,kBAAMF,EAAaF,IAF9B,SAIGA,EAAOK,QCACC,EAXA,WACb,MAAwBC,oBAAkB,GAA1C,mBAAOC,EAAP,KAAaC,EAAb,KAOA,OALAC,qBAAU,WACRC,YAAW,WACTF,GAAQ,KACP,QAEED,EAAO,qBAAKL,UAAU,SAAf,wBAA2C,yBCW5CS,EAlBG,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,MAUnB,OACE,sBAAKV,UAAU,QAAQC,QAVD,WACtB,IAAMU,EAAYC,OAAOC,KACvBH,EAAMI,OACN,SACA,uBAEEH,IAAWA,EAAUI,OAAS,OAIlC,UACE,qBAAKf,UAAU,SAASgB,IAAKN,EAAMO,SACnC,qBAAKjB,UAAU,OAAf,SAAuBU,EAAMR,WCV7BgB,EAAM,sBAmEGC,EAjEH,WACV,MAA8Bf,mBAAmB,IAAjD,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA4CjB,wBAC1CkB,GADF,mBAAOC,EAAP,KAAuBC,EAAvB,KAGA,EAA4BpB,mBAAkB,IAA9C,mBAAOqB,EAAP,KAAeC,EAAf,KACA,EAA8BtB,oBAAkB,GAAhD,mBAAOuB,EAAP,KAAgBC,EAAhB,KAEArB,qBAAU,WACRqB,GAAW,GACXC,MAAM,GAAD,OAAIX,EAAJ,iBACFY,KADH,uCACQ,WAAOC,GAAP,eAAAC,EAAA,sEACmBD,EAAKE,OADxB,OACEC,EADF,OAEJb,EAAWa,GACXC,EAAmBD,EAAS,IAC5BN,GAAW,GAJP,2CADR,uDAOGQ,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAEjB,IAEH,IAAMF,EAAqB,SAACtC,GACtB0B,GAAkBA,EAAeiB,KAAO3C,EAAO2C,KAEnDZ,GAAW,GACXJ,EAAkB3B,GAClBgC,MAAM,GAAD,OAAIX,EAAJ,wBAAuBrB,EAAO2C,GAA9B,YACFV,KADH,uCACQ,WAAOC,GAAP,eAAAC,EAAA,sEACqCD,EAAKE,OAD1C,OACEQ,EADF,OAEJf,EAAUe,EAAahB,QACvBG,GAAW,GAHP,2CADR,uDAMGQ,OAAM,SAACC,GACNC,QAAQC,MAAMF,QAIpB,OACE,sBAAKrC,UAAU,MAAf,UACE,sCACA,qBAAKA,UAAU,UAAf,SACGoB,EAAQsB,KAAI,SAAC7C,GACZ,OACE,cAAC,EAAD,CAEEA,OAAQA,EACRC,UAAwB,OAAdyB,QAAc,IAAdA,OAAA,EAAAA,EAAgBiB,MAAO3C,EAAO2C,GACxCzC,aAAcoC,GAHTtC,EAAO2C,SASpB,oCAAKjB,QAAL,IAAKA,OAAL,EAAKA,EAAgBrB,OACrB,qBAAKF,UAAU,SAAf,gBACGyB,QADH,IACGA,OADH,EACGA,EAAQiB,KAAI,SAAChC,GACZ,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM8B,SAGhCb,GAAW,cAAC,EAAD,QCtDHgB,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c31de04c.chunk.js","sourcesContent":["import React from \"react\";\nimport { CinemaTabProps } from \"../models/props.interface\";\n\nconst CinemaTab = ({\n  cinema,\n  selected,\n  selectCinema,\n}: CinemaTabProps): React.ReactElement => {\n  return (\n    <button\n      className={selected ? \"tab selected\" : \"tab\"}\n      onClick={() => selectCinema(cinema)}\n    >\n      {cinema.name}\n    </button>\n  );\n};\n\nexport default CinemaTab;\n","import React, { useEffect, useState } from \"react\";\n\nconst Loader = (): React.ReactElement => {\n  const [show, setShow] = useState<boolean>(false);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(true);\n    }, 500);\n  });\n  return show ? <div className=\"loader\">Loading...</div> : <div></div>;\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { MovieCardProps } from \"../models/props.interface\";\n\nconst MovieCard = ({ movie }: MovieCardProps): React.ReactElement => {\n  const handleCardClick = () => {\n    const newWindow = window.open(\n      movie.source,\n      \"_blank\",\n      \"noopener,noreferrer\"\n    );\n    if (newWindow) newWindow.opener = null;\n  };\n\n  return (\n    <div className=\"movie\" onClick={handleCardClick}>\n      <img className=\"poster\" src={movie.poster} />\n      <div className=\"name\">{movie.name}</div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import React, { useEffect, useState } from \"react\";\nimport { Cinema, CinemaMovies, Movie } from \"../models/cinema.interface\";\nimport CinemaTab from \"./cinema-tab\";\nimport Loader from \"./loader\";\nimport MovieCard from \"./movie-card\";\n\nconst api = \"https://api.drk.cat\";\n\nconst App = (): React.ReactElement => {\n  const [cinemas, setCinemas] = useState<Cinema[]>([]);\n  const [selectedCinema, setSelectedCinema] = useState<Cinema | undefined>(\n    undefined\n  );\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${api}/zine/cinema`)\n      .then(async (resp) => {\n        const _cinemas = await resp.json();\n        setCinemas(_cinemas);\n        handleSelectCinema(_cinemas[0]);\n        setLoading(false);\n      })\n      .catch((ex) => {\n        console.error(ex);\n      });\n  }, []);\n\n  const handleSelectCinema = (cinema: Cinema) => {\n    if (selectedCinema && selectedCinema.id === cinema.id) return;\n\n    setLoading(true);\n    setSelectedCinema(cinema);\n    fetch(`${api}/zine/cinema/${cinema.id}/movies`)\n      .then(async (resp) => {\n        const cinemaMovies: CinemaMovies = await resp.json();\n        setMovies(cinemaMovies.movies);\n        setLoading(false);\n      })\n      .catch((ex) => {\n        console.error(ex);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Zine</h1>\n      <div className=\"cinemas\">\n        {cinemas.map((cinema) => {\n          return (\n            <CinemaTab\n              key={cinema.id}\n              cinema={cinema}\n              selected={selectedCinema?.id === cinema.id}\n              selectCinema={handleSelectCinema}\n            />\n          );\n        })}\n      </div>\n\n      <h2>{selectedCinema?.name}</h2>\n      <div className=\"movies\">\n        {movies?.map((movie) => {\n          return <MovieCard key={movie.id} movie={movie} />;\n        })}\n      </div>\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app\";\nimport \"./index.sass\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}